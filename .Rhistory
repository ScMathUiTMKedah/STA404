setwd("E:/20214/MAT402/Assessment")
setwd("D:/R/Training/workshop/Introduction to Quarto")
setwd("D:/R/eRES")
require(pdftools)
require(tidyverse)
require(ggplot2)
require(pdftools)
require(tidyverse)
require(ggplot2)
require(tabulizer)
# Create vectors with the survey results for each city
cityA <- c(50, 20, 15, 10, 5)
cityB <- c(40, 25, 20, 10, 5)
modes <- c("Drove", "Walked", "Public Transit", "Cycled", "Other")
# Create the pie charts for each city
chart6 <- pie(cityA, labels = modes, col = rainbow(length(cityA)),
main = "City A")
chart7 <- pie(cityB, labels = modes, col = rainbow(length(cityB)),
main = "City B")
chart6
chart6 <- pie(cityA, labels = modes, col = rainbow(length(cityA)),
main = "City A")
pie(cityA, labels = modes, col = rainbow(length(cityA)),
main = "City A")
par(mfrow=c(1,2))
pie(cityA, labels = modes, col = rainbow(length(cityA)), main = "City A")
pie(cityB, labels = modes, col = rainbow(length(cityB)), main = "City B")
# Example scatter plot
library(ggplot2)
data(mtcars)
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()
# Example correlation calculation
cor(mtcars$wt, mtcars$mpg)
# Example linear regression
model <- lm(mpg ~ wt, data = mtcars)
summary(model)
# Example least square method
x <- mtcars$wt
y <- mtcars$mpg
x_bar <- mean(x)
y_bar <- mean(y)
beta1 <- sum((x - x_bar) * (y - y_bar)) / sum((x - x_bar)^2)
beta0 <- y_bar - beta1 * x_bar
cat("Slope (beta1):", beta1, "\n")
cat("Intercept (beta0):", beta0, "\n")
# Example coefficient of determination
y_pred <- beta0 + beta1 * x
SSE <- sum((y - y_pred)^2)
SST <- sum((y - y_bar)^2)
R2 <- 1 - SSE / SST
cat("Coefficient of determination (R2):", R2, "\n")
# Example residual plot
plot(model, which = 1)
# Example hypothesis testing
t.test(model$coefficients[2], alternative = "two.sided")
# Example confidence intervals
confint(model)
model$coefficients
model$coefficients[2]
# Example hypothesis testing
t.test(model$coefficients[2], alternative = "two.sided")
# Example hypothesis testing
t.test(mpg ~ wt, alternative = "two-sided")
# Example hypothesis testing
t.test(y ~ x, alternative = "two-sided")
# Example hypothesis testing
t.test(y ~ x, alternative = "two.sided")
# Example hypothesis testing
t.test(model$coefficients[2], alternative = "two.sided")
# Example hypothesis testing
# t.test(model$coefficients[2], alternative = "two.sided")
t.test(mpg ~ wt, data = mtcars)
# Example hypothesis testing
t.test(model$coefficients[2]=0, alternative = "two.sided")
# Example hypothesis testing
t.test(model$coefficients[2], alternative = "two.sided")
# Example hypothesis testing
# t.test(model$coefficients[2], alternative = "two.sided")
linearHypothesis(model, "x = 0")
library(car)
# Example hypothesis testing
# t.test(model$coefficients[2], alternative = "two.sided")
linearHypothesis(model, "x = 0")
library(car)
# Example hypothesis testing
# t.test(model$coefficients[2], alternative = "two.sided")
linearHypothesis(model, "x = 1")
library(car)
# Example hypothesis testing
# t.test(model$coefficients[2], alternative = "two.sided")
linearHypothesis(model, "wt = 1")
library(car)
# Example hypothesis testing
# t.test(model$coefficients[2], alternative = "two.sided")
linearHypothesis(model, "wt = 0")
library(car)
# Example hypothesis testing
t.test(model, alternative = "two.sided")
library(car)
# Example hypothesis testing
t.test(model$coefficients[1], alternative = "two.sided")
library(car)
# Example hypothesis testing
t.test(model$coefficients[2], alternative = "two.sided")
# Example hypothesis testing
t.test(model$coefficients[2], alternative = "two.sided")
